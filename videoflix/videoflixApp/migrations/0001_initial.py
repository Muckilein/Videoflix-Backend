# Generated by Django 5.0.4 on 2024-05-15 09:07

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('created_at', models.DateField(default=datetime.date.today)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='Episodes')),
                ('season', models.IntegerField(default=1)),
                ('episode', models.IntegerField(default=1)),
                ('img', models.ImageField(blank=True, null=True, upload_to='bilder/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=100, unique=True)),
                ('username', models.CharField(default=' ', max_length=100)),
                ('first_name', models.CharField(default=' ', max_length=100)),
                ('last_name', models.CharField(default=' ', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryListFilm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryListSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='EpisodeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.episode')),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('type', models.CharField(default=' ', max_length=100)),
                ('genre', models.CharField(default=' ', max_length=100)),
                ('short_file', models.FileField(blank=True, null=True, upload_to='short')),
                ('img', models.ImageField(blank=True, null=True, upload_to='bilder/')),
                ('numSeasons', models.IntegerField()),
                ('category', models.ManyToManyField(through='videoflixApp.CategoryListSeries', to='videoflixApp.category')),
                ('episodeList', models.ManyToManyField(through='videoflixApp.EpisodeList', to='videoflixApp.episode')),
            ],
        ),
        migrations.AddField(
            model_name='episodelist',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.serie'),
        ),
        migrations.AddField(
            model_name='categorylistseries',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.serie'),
        ),
        migrations.CreateModel(
            name='UserSerieEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.IntegerField(blank=True)),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.serie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('genre', models.CharField(default=' ', max_length=100)),
                ('type', models.CharField(default=' ', max_length=100)),
                ('fsk', models.CharField(default=' ', max_length=100)),
                ('created_at', models.DateField(default=datetime.date.today)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='videos')),
                ('short_file', models.FileField(blank=True, null=True, upload_to='short')),
                ('img', models.ImageField(blank=True, null=True, upload_to='bilder/')),
                ('category', models.ManyToManyField(through='videoflixApp.CategoryListFilm', to='videoflixApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='UserFilmEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.IntegerField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.video')),
            ],
        ),
        migrations.AddField(
            model_name='categorylistfilm',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoflixApp.video'),
        ),
    ]
